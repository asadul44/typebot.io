{"version":3,"sources":["../src/index.ts","../src/embedTypes/chat/iframe.ts","#style-inject:#style-inject","../src/embedTypes/popup/style.css","../src/embedTypes/popup/index.ts","../src/commands/close.ts","../src/types.ts","../src/embedTypes/chat/button.ts","../src/embedTypes/chat/style.css","../src/embedTypes/chat/index.ts","../src/embedTypes/chat/proactiveMessage.ts","../src/commands/hideMessage.ts","../src/commands/open.ts","../src/commands/setHiddenVariables.ts","../src/commands/showMessage.ts","../src/commands/toggle.ts","../src/iframe/style.css","../src/iframe/index.ts","../src/embedTypes/container/index.ts"],"sourcesContent":["import { initContainer } from './embedTypes/container'\r\nimport { initPopup, getPopupActions } from './embedTypes/popup'\r\nimport { initBubble, getBubbleActions } from './embedTypes/chat'\r\nimport {\r\n  open,\r\n  close,\r\n  toggle,\r\n  showMessage,\r\n  hideMessage,\r\n  setHiddenVariables,\r\n} from './commands'\r\n\r\nexport {\r\n  initContainer,\r\n  initPopup,\r\n  initBubble,\r\n  getPopupActions,\r\n  getBubbleActions,\r\n  open,\r\n  close,\r\n  toggle,\r\n  showMessage,\r\n  hideMessage,\r\n  setHiddenVariables,\r\n}\r\n\r\nconst defaultExports = {\r\n  initContainer,\r\n  initPopup,\r\n  initBubble,\r\n  getPopupActions,\r\n  getBubbleActions,\r\n  open,\r\n  close,\r\n  toggle,\r\n  showMessage,\r\n  hideMessage,\r\n  setHiddenVariables,\r\n}\r\n\r\nexport default defaultExports\r\n\r\nexport * from './types'\r\n","import { createIframe } from '../../iframe'\r\nimport { IframeParams } from '../../types'\r\n\r\nexport const createIframeContainer = (\r\n  params: IframeParams\r\n): HTMLIFrameElement => {\r\n  const iframe = createIframe({ ...params, loadWhenVisible: true })\r\n  iframe.style.display = 'none'\r\n  return iframe\r\n}\r\n\r\nexport const openIframe = (bubble: Element): void => {\r\n  const iframe = bubble.querySelector('.typebot-iframe') as HTMLIFrameElement\r\n  loadTypebotIfFirstOpen(iframe)\r\n  iframe.style.display = 'flex'\r\n  setTimeout(() => bubble.classList.add('iframe-opened'), 50)\r\n  bubble.classList.remove('message-opened')\r\n}\r\n\r\nexport const closeIframe = (bubble: Element): void => {\r\n  const iframe = bubble.querySelector('.typebot-iframe') as HTMLIFrameElement\r\n  bubble.classList.remove('iframe-opened')\r\n  setTimeout(() => (iframe.style.display = 'none'), 550)\r\n}\r\n\r\nexport const loadTypebotIfFirstOpen = (iframe: HTMLIFrameElement): void => {\r\n  if (!iframe.dataset.src) return\r\n  iframe.src = iframe.dataset.src\r\n  iframe.removeAttribute('data-src')\r\n}\r\n\r\nexport const isIframeOpened = (bubble: Element): boolean =>\r\n  bubble.classList.contains('iframe-opened')\r\n","\n          export default function styleInject(css, { insertAt } = {}) {\n            if (!css || typeof document === 'undefined') return\n          \n            const head = document.head || document.getElementsByTagName('head')[0]\n            const style = document.createElement('style')\n            style.type = 'text/css'\n          \n            if (insertAt === 'top') {\n              if (head.firstChild) {\n                head.insertBefore(style, head.firstChild)\n              } else {\n                head.appendChild(style)\n              }\n            } else {\n              head.appendChild(style)\n            }\n          \n            if (style.styleSheet) {\n              style.styleSheet.cssText = css\n            } else {\n              style.appendChild(document.createTextNode(css))\n            }\n          }\n          ","import styleInject from '#style-inject';styleInject(\"#typebot-popup {\\n  position: fixed;\\n  top: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: rgba(0, 0, 0, 0.5);\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  visibility: hidden;\\n  opacity: 0;\\n  transition: opacity 200ms;\\n  z-index: 99999;\\n}\\n#typebot-popup.opened {\\n  opacity: 1;\\n  visibility: visible;\\n}\\n#typebot-popup > iframe {\\n  width: 100%;\\n  height: 600px;\\n  max-width: 800px;\\n  border-radius: 10px;\\n}\\n\")","/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport { createIframe } from '../../iframe'\r\nimport { PopupActions, PopupParams } from '../../types'\r\nimport './style.css'\r\n\r\nexport const initPopup = (params: PopupParams): PopupActions => {\r\n  if (document.readyState !== 'complete') {\r\n    window.addEventListener('load', () => initPopup(params))\r\n    return { close: () => {}, open: () => {} }\r\n  }\r\n  const existingPopup = document.getElementById('typebot-popup')\r\n  if (existingPopup) existingPopup.remove()\r\n  const popupElement = createPopup(params)\r\n  !document.body\r\n    ? (window.onload = () => document.body.append(popupElement))\r\n    : document.body.append(popupElement)\r\n  return {\r\n    open: () => openPopup(popupElement),\r\n    close: () => closePopup(popupElement),\r\n  }\r\n}\r\n\r\nconst createPopup = (params: PopupParams): HTMLElement => {\r\n  const { delay } = params\r\n  const overlayElement = createOverlayElement(delay)\r\n  listenForOutsideClicks(overlayElement)\r\n  const iframeElement = createIframe({\r\n    ...params,\r\n    loadWhenVisible: true,\r\n  })\r\n  overlayElement.appendChild(iframeElement)\r\n  return overlayElement\r\n}\r\n\r\nconst createOverlayElement = (delay: number | undefined) => {\r\n  const overlayElement = document.createElement('div')\r\n  overlayElement.id = 'typebot-popup'\r\n  if (delay !== undefined) setShowTimeout(overlayElement, delay)\r\n  return overlayElement\r\n}\r\n\r\nexport const openPopup = (popupElement: Element): void => {\r\n  const iframe = popupElement.children[0] as HTMLIFrameElement\r\n  if (iframe.dataset.src) lazyLoadSrc(iframe)\r\n  document.body.style.overflowY = 'hidden'\r\n  popupElement.classList.add('opened')\r\n}\r\n\r\nexport const closePopup = (popupElement: Element): void => {\r\n  document.body.style.overflowY = 'auto'\r\n  popupElement.classList.remove('opened')\r\n}\r\n\r\nexport const isPopupOpened = (popupElement: Element): boolean =>\r\n  popupElement.classList.contains('opened')\r\n\r\nconst listenForOutsideClicks = (popupElement: HTMLDivElement) =>\r\n  popupElement.addEventListener('click', (e) => onPopupClick(e, popupElement))\r\n\r\nconst onPopupClick = (e: Event, popupElement: HTMLDivElement) => {\r\n  e.preventDefault()\r\n  const clickedElement = e.target as HTMLElement\r\n  if (clickedElement.tagName !== 'iframe') closePopup(popupElement)\r\n}\r\n\r\nconst setShowTimeout = (overlayElement: HTMLDivElement, delay: number) => {\r\n  setTimeout(() => {\r\n    openPopup(overlayElement)\r\n  }, delay)\r\n}\r\n\r\nconst lazyLoadSrc = (iframe: HTMLIFrameElement) => {\r\n  iframe.src = iframe.dataset.src as string\r\n  iframe.removeAttribute('data-src')\r\n}\r\n\r\nexport const getPopupActions = (\r\n  popupElement?: HTMLDivElement\r\n): PopupActions => {\r\n  const existingPopupElement =\r\n    popupElement ?? (document.querySelector('#typebot-popup') as HTMLDivElement)\r\n  return {\r\n    open: () => {\r\n      openPopup(existingPopupElement)\r\n    },\r\n    close: () => {\r\n      closePopup(existingPopupElement)\r\n    },\r\n  }\r\n}\r\n","import { closeIframe } from '../embedTypes/chat/iframe'\r\nimport { closePopup } from '../embedTypes/popup'\r\n\r\nexport const close = () => {\r\n  const existingPopup = document.querySelector('#typebot-popup')\r\n  if (existingPopup) closePopup(existingPopup)\r\n  const existingBubble = document.querySelector('#typebot-bubble')\r\n  if (existingBubble) closeIframe(existingBubble)\r\n}\r\n","export type IframeParams = {\r\n  url: string\r\n  backgroundColor?: string\r\n  hiddenVariables?: { [key: string]: string | undefined }\r\n  customDomain?: string\r\n  loadWhenVisible?: boolean\r\n} & IframeCallbacks\r\n\r\nexport type IframeCallbacks = {\r\n  onNewVariableValue?: (v: Variable) => void\r\n}\r\n\r\nexport type PopupParams = {\r\n  delay?: number\r\n} & IframeParams\r\n\r\nexport type PopupActions = {\r\n  open: () => void\r\n  close: () => void\r\n}\r\n\r\nexport type BubbleParams = {\r\n  button?: ButtonParams\r\n  proactiveMessage?: ProactiveMessageParams\r\n  autoOpenDelay?: number\r\n} & IframeParams\r\n\r\nexport type ButtonParams = {\r\n  color?: string\r\n  iconUrl?: string\r\n  iconStyle?: string\r\n  iconColor?: string\r\n  closeIconColor?: string\r\n}\r\n\r\nexport type ProactiveMessageParams = {\r\n  avatarUrl?: string\r\n  textContent: string\r\n  delay?: number\r\n  rememberClose?: boolean\r\n}\r\n\r\nexport type BubbleActions = {\r\n  open: () => void\r\n  close: () => void\r\n  openProactiveMessage?: () => void\r\n}\r\n\r\nexport type Variable = {\r\n  name: string\r\n  value: string\r\n}\r\n\r\nexport type TypebotPostMessageData = {\r\n  redirectUrl?: string\r\n  newVariableValue?: Variable\r\n  codeToExecute?: string\r\n  closeChatBubble?: boolean\r\n}\r\n\r\nexport const localStorageKeys = {\r\n  rememberClose: 'rememberClose',\r\n}\r\n","import { ButtonParams } from '../../types'\r\n\r\nexport const createButton = (params?: ButtonParams): HTMLButtonElement => {\r\n  const button = document.createElement('button')\r\n  button.id = 'typebot-bubble-button'\r\n  button.style.backgroundColor = params?.color ?? '#0042DA'\r\n  button.appendChild(\r\n    createButtonIcon(params?.iconUrl, params?.iconColor, params?.iconStyle)\r\n  )\r\n  button.appendChild(\r\n    createCloseIcon(params?.iconColor ?? params?.closeIconColor)\r\n  )\r\n  return button\r\n}\r\n\r\nconst createButtonIcon = (\r\n  src?: string,\r\n  iconColor?: string,\r\n  style?: string\r\n): SVGElement | HTMLElement => {\r\n  if (!src) return createDefaultIcon(iconColor)\r\n  const icon = document.createElement('img')\r\n  icon.classList.add('icon')\r\n  icon.src = src\r\n  if (style) icon.setAttribute('style', style)\r\n  return icon\r\n}\r\n\r\nconst createDefaultIcon = (iconColor?: string): SVGElement => {\r\n  const icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\r\n  icon.setAttribute('viewBox', '0 0 24 24')\r\n  icon.innerHTML = typebotLogoSvgTextContent()\r\n  icon.classList.add('icon')\r\n  icon.style.stroke = iconColor ?? '#ffffff'\r\n  return icon\r\n}\r\n\r\nconst createCloseIcon = (iconColor?: string): SVGElement => {\r\n  const icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\r\n  icon.setAttribute('viewBox', '0 0 24 24')\r\n  icon.innerHTML = closeSvgPath\r\n  icon.classList.add('close-icon')\r\n  icon.style.stroke = iconColor ?? '#ffffff'\r\n  return icon\r\n}\r\n\r\nconst typebotLogoSvgTextContent = () =>\r\n  `<path d=\"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\"></path>`\r\n\r\nexport const closeSvgPath = `<line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>`\r\n","import styleInject from '#style-inject';styleInject(\"#typebot-bubble {\\n  z-index: 99999;\\n  position: fixed;\\n}\\n#typebot-bubble > button {\\n  padding: 0px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  cursor: pointer;\\n  z-index: 99999;\\n  position: fixed;\\n  bottom: 20px;\\n  right: 20px;\\n  width: 60px;\\n  height: 60px;\\n  border-radius: 100%;\\n  background-color: rgb(230, 114, 0);\\n  box-shadow: rgba(0, 0, 0, 0.06) 0px 1px 6px 0px, rgba(0, 0, 0, 0.16) 0px 2px 32px 0px;\\n  border: medium none;\\n}\\n#typebot-bubble button:hover {\\n  filter: brightness(0.95);\\n}\\n#typebot-bubble button:active {\\n  filter: brightness(0.75);\\n}\\n#typebot-bubble > button:focus {\\n  outline: none;\\n}\\n#typebot-bubble > button > .icon {\\n  transition: opacity 500ms ease-out 0s, transform 500ms ease-out 0s;\\n}\\n#typebot-bubble > button > svg.icon {\\n  fill: none;\\n  width: 55%;\\n  stroke-width: 2px;\\n  stroke: white;\\n}\\n#typebot-bubble > button > img.icon {\\n  width: 80%;\\n  height: 80%;\\n  border-radius: 100%;\\n  object-fit: cover;\\n  object-position: center;\\n}\\n#typebot-bubble.iframe-opened > button > .icon {\\n  transform: rotate(90deg) scale(0);\\n  opacity: 0;\\n}\\n#typebot-bubble > button > .close-icon {\\n  position: absolute;\\n  transform: rotate(-90deg) scale(0);\\n  opacity: 0;\\n  transition: opacity 500ms ease-out 0s, transform 500ms ease-out 0s;\\n  width: 55%;\\n  stroke-width: 2px;\\n  stroke: white;\\n}\\n#typebot-bubble.iframe-opened > button > .close-icon {\\n  transform: rotate(90deg) scale(1);\\n  opacity: 1;\\n}\\n#typebot-bubble > iframe {\\n  opacity: 0;\\n  display: flex;\\n  border-radius: 10px;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  z-index: 99999;\\n  border-radius: 10px;\\n  position: fixed;\\n  transform: translate(0, 100px);\\n  transition: opacity 500ms ease-out 0s, transform 500ms ease-out 0s;\\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 5px 40px;\\n  width: 400px;\\n  max-height: 680px;\\n  inset: auto 20px 90px auto;\\n  height: calc(100% - 160px);\\n  background-color: white;\\n}\\n#typebot-bubble.iframe-opened > iframe {\\n  transform: translate(0, 0);\\n  opacity: 1;\\n}\\n.typebot-chat-button.active .typebot-chat-icon {\\n  transform: rotate(90deg) scale(0);\\n  opacity: 0;\\n}\\n.typebot-chat-button:not(.active) .typebot-chat-close {\\n  transform: rotate(-90deg) scale(0);\\n  opacity: 0;\\n}\\n.typebot-iframe-container:not(.active) {\\n  opacity: 0;\\n  transform: translate(0, 100px);\\n}\\n.typebot-iframe-container.active {\\n  opacity: 1;\\n  transform: translate(0, 0);\\n}\\n#typebot-bubble > .proactive-message {\\n  font-size: 18px;\\n  color: #303235;\\n  opacity: 0;\\n  visibility: hidden;\\n  transform: translate(0, 10px);\\n  transition: opacity 500ms ease-out, transform 500ms ease-out;\\n  cursor: pointer;\\n  font-weight: 300;\\n  bottom: 90px;\\n  right: 20px;\\n  z-index: 99999;\\n  position: fixed;\\n  max-width: 280px;\\n  background-color: white;\\n  box-shadow: 0 3px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\\n  padding: 16px;\\n  display: flex;\\n  align-items: center;\\n  border-radius: 8px;\\n}\\n#typebot-bubble.message-opened > .proactive-message {\\n  opacity: 1;\\n  visibility: visible;\\n  transform: translate(0, 0);\\n}\\n#typebot-bubble > .proactive-message > .close-button {\\n  position: absolute;\\n  top: -15px;\\n  right: -7px;\\n  width: 30px;\\n  height: 30px;\\n  background-color: rgb(237, 242, 247);\\n  border-radius: 100%;\\n  border: medium none;\\n  outline: currentcolor none medium;\\n  fill: #4a5568;\\n  padding: 0px;\\n  cursor: pointer;\\n  padding: 2px;\\n}\\n#typebot-bubble > .proactive-message > img {\\n  margin-right: 8px;\\n  width: 40px;\\n  height: 40px;\\n  flex-shrink: 0;\\n  border-radius: 100%;\\n  object-fit: cover;\\n}\\n#typebot-bubble > .proactive-message > p {\\n  margin: 0;\\n}\\n@media screen and (max-width: 450px) {\\n  #typebot-bubble > .proactive-message {\\n    max-width: 200px;\\n    font-size: 15px;\\n    bottom: 70px;\\n    right: 10px;\\n  }\\n  #typebot-bubble > button {\\n    width: 50px !important;\\n    height: 50px !important;\\n    bottom: 10px !important;\\n    right: 10px !important;\\n  }\\n  #typebot-bubble > iframe {\\n    inset: 0 0 auto auto;\\n    width: 100%;\\n    height: calc(100% - 70px);\\n    max-height: none;\\n  }\\n}\\n\")","/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport {\r\n  BubbleActions,\r\n  BubbleParams,\r\n  localStorageKeys,\r\n  ProactiveMessageParams,\r\n} from '../../types'\r\nimport { createButton } from './button'\r\nimport { closeIframe, createIframeContainer, openIframe } from './iframe'\r\nimport {\r\n  createProactiveMessage,\r\n  openProactiveMessage,\r\n} from './proactiveMessage'\r\nimport './style.css'\r\n\r\nexport const initBubble = (params: BubbleParams): BubbleActions => {\r\n  if (document.readyState !== 'complete') {\r\n    window.addEventListener('load', () => initBubble(params))\r\n    return { close: () => {}, open: () => {} }\r\n  }\r\n  const existingBubble = document.getElementById('typebot-bubble') as\r\n    | HTMLDivElement\r\n    | undefined\r\n  if (existingBubble) existingBubble.remove()\r\n  const { bubbleElement, proactiveMessageElement } = createBubble(params)\r\n  if (\r\n    (params.autoOpenDelay || params.autoOpenDelay === 0) &&\r\n    !hasBeenClosed()\r\n  ) {\r\n    setRememberCloseInStorage()\r\n    setTimeout(() => openIframe(bubbleElement), params.autoOpenDelay)\r\n  }\r\n  !document.body\r\n    ? (window.onload = () => document.body.appendChild(bubbleElement))\r\n    : document.body.appendChild(bubbleElement)\r\n  return getBubbleActions(bubbleElement, proactiveMessageElement)\r\n}\r\n\r\nconst createBubble = (\r\n  params: BubbleParams\r\n): {\r\n  bubbleElement: HTMLDivElement\r\n  iframeElement: HTMLIFrameElement\r\n  proactiveMessageElement?: HTMLDivElement\r\n} => {\r\n  const bubbleElement = document.createElement('div')\r\n  bubbleElement.id = 'typebot-bubble'\r\n  const buttonElement = createButton(params.button)\r\n  bubbleElement.appendChild(buttonElement)\r\n  const proactiveMessageElement =\r\n    params.proactiveMessage && !hasBeenClosed()\r\n      ? addProactiveMessage(params.proactiveMessage, bubbleElement)\r\n      : undefined\r\n  const iframeElement = createIframeContainer(params)\r\n  buttonElement.addEventListener('click', () => {\r\n    iframeElement.style.display === 'none'\r\n      ? openIframe(bubbleElement)\r\n      : closeIframe(bubbleElement)\r\n  })\r\n  if (proactiveMessageElement)\r\n    proactiveMessageElement.addEventListener('click', () =>\r\n      onProactiveMessageClick(bubbleElement, iframeElement)\r\n    )\r\n  bubbleElement.appendChild(iframeElement)\r\n  return { bubbleElement, proactiveMessageElement, iframeElement }\r\n}\r\n\r\nconst onProactiveMessageClick = (\r\n  bubble: HTMLDivElement,\r\n  iframe: HTMLIFrameElement\r\n): void => {\r\n  iframe.style.display === 'none' ? openIframe(bubble) : closeIframe(bubble)\r\n  bubble.classList.remove('message-opened')\r\n}\r\n\r\nexport const getBubbleActions = (\r\n  bubbleElement?: HTMLDivElement,\r\n  proactiveMessageElement?: HTMLDivElement\r\n): BubbleActions => {\r\n  const existingBubbleElement =\r\n    bubbleElement ??\r\n    (document.querySelector('#typebot-bubble') as HTMLDivElement | undefined)\r\n  if (!existingBubbleElement) return { close: () => {}, open: () => {} }\r\n  const existingProactiveMessage =\r\n    proactiveMessageElement ??\r\n    document.querySelector('#typebot-bubble .proactive-message')\r\n  return {\r\n    openProactiveMessage: existingProactiveMessage\r\n      ? () => {\r\n          openProactiveMessage(existingBubbleElement)\r\n        }\r\n      : undefined,\r\n    open: () => {\r\n      openIframe(existingBubbleElement)\r\n    },\r\n    close: () => {\r\n      closeIframe(existingBubbleElement)\r\n    },\r\n  }\r\n}\r\n\r\nconst addProactiveMessage = (\r\n  proactiveMessage: ProactiveMessageParams,\r\n  bubbleElement: HTMLDivElement\r\n) => {\r\n  const proactiveMessageElement = createProactiveMessage(\r\n    proactiveMessage,\r\n    bubbleElement\r\n  )\r\n  bubbleElement.appendChild(proactiveMessageElement)\r\n  return proactiveMessageElement\r\n}\r\n\r\nconst hasBeenClosed = () => {\r\n  const closeDecisionFromStorage = localStorage.getItem(\r\n    localStorageKeys.rememberClose\r\n  )\r\n  return closeDecisionFromStorage ? true : false\r\n}\r\n\r\nexport const setRememberCloseInStorage = () =>\r\n  localStorage.setItem(localStorageKeys.rememberClose, 'true')\r\n","import { setRememberCloseInStorage } from '.'\r\nimport { ProactiveMessageParams } from '../../types'\r\nimport { closeSvgPath } from './button'\r\n\r\nconst createProactiveMessage = (\r\n  params: ProactiveMessageParams,\r\n  bubble: HTMLDivElement\r\n): HTMLDivElement => {\r\n  const container = document.createElement('div')\r\n  container.classList.add('proactive-message')\r\n  if (params.delay !== undefined) setOpenTimeout(bubble, params)\r\n  if (params.avatarUrl) container.appendChild(createAvatar(params.avatarUrl))\r\n  container.appendChild(createTextElement(params.textContent))\r\n  container.appendChild(createCloseButton(bubble))\r\n  return container\r\n}\r\n\r\nconst setOpenTimeout = (\r\n  bubble: HTMLDivElement,\r\n  params: ProactiveMessageParams\r\n) => {\r\n  setTimeout(() => {\r\n    openProactiveMessage(bubble)\r\n  }, params.delay)\r\n}\r\n\r\nconst createAvatar = (avatarUrl: string): HTMLImageElement => {\r\n  const element = document.createElement('img')\r\n  element.src = avatarUrl\r\n  return element\r\n}\r\n\r\nconst createTextElement = (text: string): HTMLParagraphElement => {\r\n  const element = document.createElement('p')\r\n  element.innerHTML = text\r\n  return element\r\n}\r\n\r\nconst createCloseButton = (bubble: HTMLDivElement): HTMLButtonElement => {\r\n  const button = document.createElement('button')\r\n  button.classList.add('close-button')\r\n  button.innerHTML = `<svg viewBox=\"0 0 24 24\" style=\"stroke:black; stroke-width:2px; margin:4px\">${closeSvgPath}</svg>`\r\n  button.addEventListener('click', (e) => onCloseButtonClick(e, bubble))\r\n  return button\r\n}\r\n\r\nconst openProactiveMessage = (bubble: Element): void => {\r\n  bubble.classList.add('message-opened')\r\n}\r\n\r\nconst onCloseButtonClick = (\r\n  e: Event,\r\n  proactiveMessageElement: HTMLDivElement\r\n) => {\r\n  e.stopPropagation()\r\n  closeProactiveMessage(proactiveMessageElement)\r\n}\r\n\r\nconst closeProactiveMessage = (bubble: Element): void => {\r\n  setRememberCloseInStorage()\r\n  bubble.classList.remove('message-opened')\r\n}\r\n\r\nexport { createProactiveMessage, openProactiveMessage, closeProactiveMessage }\r\n","import { closeProactiveMessage } from '../embedTypes/chat/proactiveMessage'\r\n\r\nexport const hideMessage = () => {\r\n  const existingBubble = document.querySelector('#typebot-bubble')\r\n  if (existingBubble) closeProactiveMessage(existingBubble)\r\n}\r\n","import { openIframe } from '../embedTypes/chat/iframe'\r\nimport { openPopup } from '../embedTypes/popup'\r\n\r\nexport const open = () => {\r\n  const existingPopup = document.querySelector('#typebot-popup')\r\n  if (existingPopup) openPopup(existingPopup)\r\n  const existingBubble = document.querySelector('#typebot-bubble')\r\n  if (existingBubble) openIframe(existingBubble)\r\n}\r\n","import { IframeParams } from '../types'\r\n\r\nexport const setHiddenVariables = (\r\n  hiddenVariables: IframeParams['hiddenVariables']\r\n) => {\r\n  const existingIframe = document.querySelector('.typebot-iframe') as\r\n    | HTMLIFrameElement\r\n    | undefined\r\n  if (!existingIframe) return\r\n  const existingUrl =\r\n    existingIframe.getAttribute('data-src') || existingIframe.src\r\n  const existingHiddenVariables = new URLSearchParams(existingUrl.split('?')[1])\r\n  const existingQueryObj: { [key: string]: string } = {}\r\n  existingHiddenVariables.forEach((value, key) => {\r\n    existingQueryObj[key] = value\r\n  })\r\n  const isLoadWhenVisible = existingIframe.hasAttribute('data-src')\r\n  const iframeUrl = `${existingUrl.split('?')[0]}${parseQueryParams({\r\n    ...existingQueryObj,\r\n    ...hiddenVariables,\r\n  })}`\r\n  existingIframe.setAttribute(isLoadWhenVisible ? 'data-src' : 'src', iframeUrl)\r\n}\r\n\r\nexport const parseQueryParams = (starterVariables?: {\r\n  [key: string]: string | undefined\r\n}): string => {\r\n  return parseStarterVariables(starterVariables)\r\n}\r\n\r\nconst parseStarterVariables = (starterVariables?: {\r\n  [key: string]: string | undefined\r\n}) =>\r\n  starterVariables && Object.keys(starterVariables).length > 0\r\n    ? `?${Object.keys(starterVariables)\r\n        .filter((key) => starterVariables[key])\r\n        .map(\r\n          (key) =>\r\n            `${key}=${encodeURIComponent(starterVariables[key] as string)}`\r\n        )\r\n        .join('&')}`\r\n    : ''\r\n","import { openProactiveMessage } from '../embedTypes/chat/proactiveMessage'\r\n\r\nexport const showMessage = () => {\r\n  const existingBubble = document.querySelector('#typebot-bubble')\r\n  if (existingBubble) openProactiveMessage(existingBubble)\r\n}\r\n","import {\r\n  closeIframe,\r\n  isIframeOpened,\r\n  openIframe,\r\n} from '../embedTypes/chat/iframe'\r\nimport { closePopup, isPopupOpened, openPopup } from '../embedTypes/popup'\r\n\r\nexport const toggle = () => {\r\n  const existingPopup = document.querySelector('#typebot-popup')\r\n  if (existingPopup)\r\n    isPopupOpened(existingPopup)\r\n      ? closePopup(existingPopup)\r\n      : openPopup(existingPopup)\r\n  const existingBubble = document.querySelector('#typebot-bubble')\r\n  if (existingBubble)\r\n    isIframeOpened(existingBubble)\r\n      ? closeIframe(existingBubble)\r\n      : openIframe(existingBubble)\r\n}\r\n","import styleInject from '#style-inject';styleInject(\".typebot-iframe {\\n  width: 100%;\\n  height: 100%;\\n  border: none;\\n  border-radius: inherit;\\n}\\n\")","import { close } from '../commands'\r\nimport { parseQueryParams } from '../commands/setHiddenVariables'\r\nimport { TypebotPostMessageData, IframeCallbacks, IframeParams } from '../types'\r\nimport './style.css'\r\n\r\nexport const createIframe = ({\r\n  backgroundColor,\r\n  url,\r\n  ...iframeParams\r\n}: IframeParams): HTMLIFrameElement => {\r\n  const { loadWhenVisible, hiddenVariables } = iframeParams\r\n  const hostUrlParams = new URLSearchParams(document.location.search)\r\n  const hostQueryObj: { [key: string]: string } = {}\r\n  hostUrlParams.forEach((value, key) => {\r\n    hostQueryObj[key] = value\r\n  })\r\n  const iframeUrl = `${url}${parseQueryParams({\r\n    ...hiddenVariables,\r\n    ...hostQueryObj,\r\n  })}`\r\n  const iframe = document.createElement('iframe')\r\n  iframe.setAttribute(loadWhenVisible ? 'data-src' : 'src', iframeUrl)\r\n  iframe.setAttribute('data-id', url)\r\n  const randomThreeLettersId = Math.random().toString(36).substring(7)\r\n  const uniqueId = `${url}-${randomThreeLettersId}`\r\n  iframe.setAttribute('id', uniqueId)\r\n  if (backgroundColor) iframe.style.backgroundColor = backgroundColor\r\n  iframe.classList.add('typebot-iframe')\r\n  const { onNewVariableValue } = iframeParams\r\n  listenForTypebotMessages({ onNewVariableValue })\r\n  return iframe\r\n}\r\n\r\nexport const listenForTypebotMessages = (callbacks: IframeCallbacks) => {\r\n  window.addEventListener('message', (event) => {\r\n    const data = event.data as { from?: 'typebot' } & TypebotPostMessageData\r\n    if (data.from === 'typebot') processMessage(event.data, callbacks)\r\n  })\r\n}\r\n\r\nconst processMessage = (\r\n  data: TypebotPostMessageData,\r\n  callbacks: IframeCallbacks\r\n) => {\r\n  if (data.redirectUrl) window.open(data.redirectUrl)\r\n  if (data.newVariableValue && callbacks.onNewVariableValue)\r\n    callbacks.onNewVariableValue(data.newVariableValue)\r\n  if (data.codeToExecute) Function(data.codeToExecute)()\r\n  if (data.closeChatBubble) close()\r\n}\r\n","import { createIframe } from \"../../iframe\";\r\nimport { IframeParams } from \"../../types\";\r\n\r\nexport const initContainer = (\r\n  containerId: string,\r\n  iframeParams: IframeParams\r\n): HTMLElement | undefined => {\r\n  const { loadWhenVisible } = iframeParams;\r\n  const containerElement = document.getElementById(containerId);\r\n  if (!containerElement) return;\r\n  if (containerElement.children[0])\r\n    return containerElement.children[0] as HTMLIFrameElement;\r\n  const lazy = loadWhenVisible ?? true;\r\n  const iframeElement = createIframe({\r\n    ...iframeParams,\r\n    loadWhenVisible: lazy,\r\n  });\r\n  if (lazy) observeOnScroll(iframeElement);\r\n  containerElement.appendChild(iframeElement);\r\n  return iframeElement;\r\n};\r\n\r\nconst observeOnScroll = (iframeElement: HTMLIFrameElement) => {\r\n  const observer = new IntersectionObserver(\r\n    (entries) => {\r\n      if (entries.pop()?.isIntersecting === true) lazyLoadSrc(iframeElement);\r\n    },\r\n    { threshold: [0] }\r\n  );\r\n  observer.observe(iframeElement);\r\n};\r\n\r\nconst lazyLoadSrc = (iframeElement: HTMLIFrameElement) => {\r\n  if (!iframeElement.dataset.src) return;\r\n  iframeElement.src = iframeElement.dataset.src;\r\n  iframeElement.removeAttribute(\"data-src\");\r\n};\r\n"],"mappings":"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","names":["lazyLoadSrc"]}